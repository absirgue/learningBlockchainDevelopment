{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "requestedRandomness",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "endLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyhash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lottery_state",
      "outputs": [
        {
          "internalType": "enum Lottery.LOTTERY_STATE",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recentWinner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startLottery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/asirgue/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "1": "/Users/asirgue/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "2": "/Users/asirgue/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFConsumerBase.sol",
    "3": "/Users/asirgue/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFRequestIDBase.sol",
    "4": "/Users/asirgue/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "5": "/Users/asirgue/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/LinkTokenInterface.sol",
    "6": "/Users/asirgue/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
    "7": "contracts/Lottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        274
      ]
    },
    "id": 275,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "496:23:7"
      },
      {
        "absolutePath": "/Users/asirgue/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 275,
        "sourceUnit": 556,
        "src": "521:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/asirgue/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 275,
        "sourceUnit": 385,
        "src": "598:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/asirgue/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.6/VRFConsumerBase.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 275,
        "sourceUnit": 510,
        "src": "651:59:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "VRFConsumerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 509,
              "src": "732:15:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFConsumerBase_$509",
                "typeString": "contract VRFConsumerBase"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "732:15:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 384,
              "src": "749:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$384",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "749:7:7"
          }
        ],
        "contractDependencies": [
          384,
          509,
          578,
          628
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 274,
        "linearizedBaseContracts": [
          274,
          384,
          578,
          509,
          628
        ],
        "name": "Lottery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "098de820",
            "id": 10,
            "mutability": "mutable",
            "name": "minimumUsd",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 274,
            "src": "763:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "763:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "741bef1a",
            "id": 12,
            "mutability": "mutable",
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 274,
            "src": "794:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$555",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 11,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 555,
              "src": "794:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$555",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Lottery.LOTTERY_STATE",
            "id": 16,
            "members": [
              {
                "id": 13,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "867:4:7"
              },
              {
                "id": 14,
                "name": "CLOSED",
                "nodeType": "EnumValue",
                "src": "881:6:7"
              },
              {
                "id": 15,
                "name": "CALCULATING_WINNER",
                "nodeType": "EnumValue",
                "src": "897:18:7"
              }
            ],
            "name": "LOTTERY_STATE",
            "nodeType": "EnumDefinition",
            "src": "838:83:7"
          },
          {
            "constant": false,
            "functionSelector": "81447999",
            "id": 18,
            "mutability": "mutable",
            "name": "lottery_state",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 274,
            "src": "979:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
              "typeString": "enum Lottery.LOTTERY_STATE"
            },
            "typeName": {
              "contractScope": null,
              "id": 17,
              "name": "LOTTERY_STATE",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16,
              "src": "979:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                "typeString": "enum Lottery.LOTTERY_STATE"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 20,
            "mutability": "mutable",
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 274,
            "src": "1019:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1019:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69ebe78e",
            "id": 22,
            "mutability": "mutable",
            "name": "keyhash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 274,
            "src": "1043:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1043:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f71d96cb",
            "id": 25,
            "mutability": "mutable",
            "name": "players",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 274,
            "src": "1071:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1071:15:7",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 24,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1071:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f8c70cf",
            "id": 27,
            "mutability": "mutable",
            "name": "recentWinner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 274,
            "src": "1109:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1109:15:7",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 31,
            "name": "requestedRandomness",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 31,
                  "src": "1176:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1175:19:7"
            },
            "src": "1150:45:7"
          },
          {
            "body": {
              "id": 76,
              "nodeType": "Block",
              "src": "1598:192:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1608:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$555",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 50,
                          "name": "_priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1642:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 49,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "1620:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$555_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1620:33:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$555",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1608:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$555",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:45:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "minimumUsd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1663:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3530",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1676:2:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1682:2:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1686:2:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1682:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 59,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1681:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "1676:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      }
                    },
                    "src": "1663:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "1663:26:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1699:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1715:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1715:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "1699:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:36:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1745:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 69,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1751:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1745:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:10:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1765:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1775:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1765:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:18:7"
                }
              ]
            },
            "documentation": null,
            "id": 77,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 44,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "1574:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 45,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "1591:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 46,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 43,
                  "name": "VRFConsumerBase",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 509,
                  "src": "1558:15:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_VRFConsumerBase_$509_$",
                    "typeString": "type(contract VRFConsumerBase)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1558:39:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "1422:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "1450:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_link",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "1483:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "1506:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "1528:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1412:138:7"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1598:0:7"
            },
            "scope": 274,
            "src": "1401:389:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1828:221:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1846:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1863:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1863:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "1846:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1838:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:44:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 89,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1931:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1931:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 88,
                            "name": "getConversionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1913:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1913:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 92,
                          "name": "minimumUsd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1945:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1913:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f207370656e64206d6f72652045544821",
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1969:29:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f4d6283454b528bce61a908a772808c61dd40185e3ba77c713fa86ebb8d7362",
                          "typeString": "literal_string \"You need to spend more ETH!\""
                        },
                        "value": "You need to spend more ETH!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f4d6283454b528bce61a908a772808c61dd40185e3ba77c713fa86ebb8d7362",
                          "typeString": "literal_string \"You need to spend more ETH!\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1892:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:116:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:116:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2031:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2031:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2018:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2018:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:24:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:24:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e97dcb62",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:2:7"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1828:0:7"
            },
            "scope": 274,
            "src": "1796:253:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "2086:174:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 109,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "2117:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 110,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "2134:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2134:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "2117:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e27742073746172742061206e6577206c6f747465727920796574",
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2168:31:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e120aa22ebda653ae32eb3cc176c973cb8be3022fad78d923521de9f88e3d2ef",
                          "typeString": "literal_string \"Can't start a new lottery yet\""
                        },
                        "value": "Can't start a new lottery yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e120aa22ebda653ae32eb3cc176c973cb8be3022fad78d923521de9f88e3d2ef",
                          "typeString": "literal_string \"Can't start a new lottery yet\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2096:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:113:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:113:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 116,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2219:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2235:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2235:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "2219:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:34:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "160344e2",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startLottery",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2076:2:7"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2086:0:7"
            },
            "scope": 274,
            "src": "2055:205:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "2305:350:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2315:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2331:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CALCULATING_WINNER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2331:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "2315:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:48:7"
                },
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 143,
                      "src": "2407:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2407:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "keyhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2445:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2454:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 134,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "2427:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2407:51:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2638:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 139,
                      "name": "requestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2618:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "EmitStatement",
                  "src": "2613:35:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1593a8c7",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 125,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 124,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "2295:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2295:9:7"
              }
            ],
            "name": "endLottery",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2285:2:7"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2305:0:7"
            },
            "scope": 274,
            "src": "2266:389:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              403
            ],
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "2966:568:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                          "typeString": "enum Lottery.LOTTERY_STATE"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 153,
                          "name": "lottery_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "2997:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "LOTTERY_STATE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "3014:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                              "typeString": "type(enum Lottery.LOTTERY_STATE)"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING_WINNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3014:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                            "typeString": "enum Lottery.LOTTERY_STATE"
                          }
                        },
                        "src": "2997:49:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206172656e2774207468657265207965742021",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3060:24:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc106f81a1648c678ea568e6fc39ff301c820c7dc1fe34a6655373b9cec1a542",
                          "typeString": "literal_string \"You aren't there yet !\""
                        },
                        "value": "You aren't there yet !"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc106f81a1648c678ea568e6fc39ff301c820c7dc1fe34a6655373b9cec1a542",
                          "typeString": "literal_string \"You aren't there yet !\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2976:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2976:118:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2976:118:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 161,
                          "name": "_randomness",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "3112:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3126:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3112:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f2072616e646f6d206e756d62657220666f756e642e",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3129:25:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d0d3ad10fa4fdfd950dd17bbe137f22aa6d70567f68ec4fa5ed7b1262452a12",
                          "typeString": "literal_string \"No random number found.\""
                        },
                        "value": "No random number found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d0d3ad10fa4fdfd950dd17bbe137f22aa6d70567f68ec4fa5ed7b1262452a12",
                          "typeString": "literal_string \"No random number found.\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3104:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "3104:51:7"
                },
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "indexOfWinner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 203,
                      "src": "3166:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3166:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3190:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3204:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3204:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3190:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3166:52:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "recentWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3228:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3243:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 177,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "indexOfWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3251:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3243:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3228:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3228:37:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 185,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3393:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Lottery_$274",
                                "typeString": "contract Lottery"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Lottery_$274",
                                "typeString": "contract Lottery"
                              }
                            ],
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3385:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3385:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3385:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3385:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "recentWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "3363:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3363:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3363:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "3363:44:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 190,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3447:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3479:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3457:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address payable[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3461:15:7",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 192,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "3461:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                            "typeString": "address payable[]"
                          }
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3457:24:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "3447:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:34:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 198,
                      "name": "lottery_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3491:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "LOTTERY_STATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3507:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_LOTTERY_STATE_$16_$",
                          "typeString": "type(enum Lottery.LOTTERY_STATE)"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3507:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                        "typeString": "enum Lottery.LOTTERY_STATE"
                      }
                    },
                    "src": "3491:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LOTTERY_STATE_$16",
                      "typeString": "enum Lottery.LOTTERY_STATE"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3491:36:7"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 150,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2953:8:7"
            },
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 204,
                  "src": "2887:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 204,
                  "src": "2907:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2886:41:7"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2966:0:7"
            },
            "scope": 274,
            "src": "2860:674:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "3590:116:7",
              "statements": [
                {
                  "assignments": [
                    null,
                    210,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 222,
                      "src": "3603:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3603:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 214,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3626:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$555",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 554,
                      "src": "3626:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3626:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3600:53:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 217,
                          "name": "answer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "3678:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030303030303030",
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3687:11:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "value": "10000000000"
                        },
                        "src": "3678:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3670:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 215,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3670:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3670:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 208,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "3663:36:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "98d5fdca",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3557:2:7"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 223,
                  "src": "3581:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3580:9:7"
            },
            "scope": 274,
            "src": "3540:166:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "3834:156:7",
              "statements": [
                {
                  "assignments": [
                    231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 231,
                      "mutability": "mutable",
                      "name": "ethPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 246,
                      "src": "3844:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3844:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 234,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 232,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "3863:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3844:29:7"
                },
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "ethAmountInUsd",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 246,
                      "src": "3883:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3883:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 237,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "3909:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 238,
                            "name": "ethAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "3920:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3909:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 240,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3908:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3933:19:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "3908:44:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3883:69:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 244,
                    "name": "ethAmountInUsd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 236,
                    "src": "3969:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 229,
                  "id": 245,
                  "nodeType": "Return",
                  "src": "3962:21:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6e5b6b28",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConversionRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "ethAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 247,
                  "src": "3757:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3757:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3756:19:7"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 247,
                  "src": "3821:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3821:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3820:9:7"
            },
            "scope": 274,
            "src": "3730:260:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "4052:154:7",
              "statements": [
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 272,
                      "src": "4084:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4084:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 254,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "4100:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4100:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4084:26:7"
                },
                {
                  "assignments": [
                    258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 258,
                      "mutability": "mutable",
                      "name": "precision",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 272,
                      "src": "4120:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4120:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 264,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4140:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4144:2:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4148:2:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "4144:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "4140:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4120:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 265,
                            "name": "minimumUsd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4168:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 266,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "4181:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4168:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 268,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4167:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 269,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 253,
                      "src": "4194:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4167:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 251,
                  "id": 271,
                  "nodeType": "Return",
                  "src": "4160:39:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "09bc33a7",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4019:2:7"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 273,
                  "src": "4043:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4043:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4042:9:7"
            },
            "scope": 274,
            "src": "3996:210:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 275,
        "src": "712:3496:7"
      }
    ],
    "src": "496:3713:7"
  },
  "bytecode": "60c060405234801561001057600080fd5b50604051610eed380380610eed833981810160405260a081101561003357600080fd5b508051602082015160408301516060808501516080958601516001600160601b031985841b811660a0529284901b909216909552929391929091906000610078610117565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600380546001600160a01b0319166001600160a01b038716178082556802b5e3af16b18800006002556001919060ff60a01b1916600160a01b8302179055506004919091556005555061011b915050565b3390565b60805160601c60a05160601c610da4610149600039806105be528061090b5250806108dc5250610da46000f3fe6080604052600436106100fe5760003560e01c8063741bef1a1161009557806398d5fdca1161006457806398d5fdca14610280578063ddca3f4314610295578063e97dcb62146102aa578063f2fde38b146102b2578063f71d96cb146102e5576100fe565b8063741bef1a146101f057806381447999146102055780638da5cb5b1461023b57806394985ddd14610250576100fe565b80634f8c70cf116100d15780634f8c70cf1461016b57806369ebe78e1461019c5780636e5b6b28146101b1578063715018a6146101db576100fe565b8063098de8201461010357806309bc33a71461012a5780631593a8c71461013f578063160344e214610156575b600080fd5b34801561010f57600080fd5b5061011861030f565b60408051918252519081900360200190f35b34801561013657600080fd5b50610118610315565b34801561014b57600080fd5b50610154610344565b005b34801561016257600080fd5b50610154610417565b34801561017757600080fd5b50610180610492565b604080516001600160a01b039092168252519081900360200190f35b3480156101a857600080fd5b506101186104a1565b3480156101bd57600080fd5b50610118600480360360208110156101d457600080fd5b50356104a7565b3480156101e757600080fd5b506101546104c7565b3480156101fc57600080fd5b50610180610585565b34801561021157600080fd5b5061021a610594565b6040518082600281111561022a57fe5b815260200191505060405180910390f35b34801561024757600080fd5b506101806105a4565b34801561025c57600080fd5b506101546004803603604081101561027357600080fd5b50803590602001356105b3565b34801561028c57600080fd5b5061011861063e565b3480156102a157600080fd5b506101186106cb565b6101546106d1565b3480156102be57600080fd5b50610154600480360360208110156102d557600080fd5b50356001600160a01b0316610798565b3480156102f157600080fd5b506101806004803603602081101561030857600080fd5b50356108ad565b60025481565b60008061032061063e565b90506000670de0b6b3a764000090508181600254028161033c57fe5b049250505090565b61034c6108d4565b6001600160a01b031661035d6105a4565b6001600160a01b0316146103b8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6003805460ff60a01b1916600160a11b1790556005546004546000916103dd916108d8565b6040805182815290519192507f55ed974a51aa5443394b8136510c290cd2f01456cf37dec995cc0cc574a78173919081900360200190a150565b6001600354600160a01b900460ff16600281111561043157fe5b14610483576040805162461bcd60e51b815260206004820152601d60248201527f43616e27742073746172742061206e6577206c6f747465727920796574000000604482015290519081900360640190fd5b6003805460ff60a01b19169055565b6007546001600160a01b031681565b60055481565b6000806104b261063e565b670de0b6b3a764000093029290920492915050565b6104cf6108d4565b6001600160a01b03166104e06105a4565b6001600160a01b03161461053b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b6003546001600160a01b031681565b600354600160a01b900460ff1681565b6001546001600160a01b031690565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610630576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015290519081900360640190fd5b61063a8282610a8b565b5050565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d60a08110156106b957600080fd5b50602001516402540be4000291505090565b60045481565b6000600354600160a01b900460ff1660028111156106eb57fe5b146106f557600080fd5b600254610701346104a7565b1015610754576040805162461bcd60e51b815260206004820152601b60248201527f596f75206e65656420746f207370656e64206d6f726520455448210000000000604482015290519081900360640190fd5b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b03191633179055565b6107a06108d4565b6001600160a01b03166107b16105a4565b6001600160a01b03161461080c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108515760405162461bcd60e51b8152600401808060200182810382526026815260200180610d496026913960400191505060405180910390fd5b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600681815481106108ba57fe5b6000918252602090912001546001600160a01b0316905081565b3390565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156109b557818101518382015260200161099d565b50505050905090810190601f1680156109e25780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b505050506040513d6020811015610a2d57600080fd5b5050600083815260208190526040812054610a4d90859083903090610bf0565b600085815260208190526040902054909150610a6a906001610c37565b600085815260208190526040902055610a838482610c98565b949350505050565b6002600354600160a01b900460ff166002811115610aa557fe5b14610af0576040805162461bcd60e51b8152602060048201526016602482015275596f75206172656e277420746865726520796574202160501b604482015290519081900360640190fd5b60008111610b45576040805162461bcd60e51b815260206004820152601760248201527f4e6f2072616e646f6d206e756d62657220666f756e642e000000000000000000604482015290519081900360640190fd5b6006546000908281610b5357fe5b06905060068181548110610b6357fe5b6000918252602082200154600780546001600160a01b0319166001600160a01b0392831617908190556040519116914780156108fc02929091818181858888f19350505050158015610bb9573d6000803e3d6000fd5b506040805160008152602081019182905251610bd791600691610cc4565b50506003805460ff60a01b1916600160a01b1790555050565b60408051602080820196909652808201949094526001600160a01b039290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b600082820183811015610c91576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b828054828255906000526020600020908101928215610d19579160200282015b82811115610d1957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610ce4565b50610d25929150610d29565b5090565b5b80821115610d255780546001600160a01b0319168155600101610d2a56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220cfee0db438da1e340e9c13f7d8d889f06b224c4c2a9f69e20f685c8047dba2ba64736f6c634300060c0033",
  "bytecodeSha1": "8a7b7f7f3f1672b904ae86089968ada96445fe14",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "36": [
            1297,
            1320,
            true
          ],
          "37": [
            2099,
            2121,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "39": [
            9767,
            9795,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "SafeMathChainlink.add": {
          "38": [
            967,
            973,
            true
          ]
        }
      },
      "7": {
        "Lottery.enter": {
          "32": [
            1846,
            1881,
            true
          ],
          "33": [
            1913,
            1955,
            true
          ]
        },
        "Lottery.fulfillRandomness": {
          "34": [
            2997,
            3046,
            true
          ],
          "35": [
            3112,
            3127,
            true
          ]
        },
        "Lottery.startLottery": {
          "31": [
            2117,
            2154,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "7": [
            1150,
            1163
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1781,
            1826
          ],
          "6": [
            1836,
            1855
          ]
        },
        "Ownable.transferOwnership": {
          "14": [
            2091,
            2164
          ],
          "15": [
            2174,
            2217
          ],
          "16": [
            2227,
            2244
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "17": [
            678,
            695
          ]
        }
      },
      "2": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "8": [
            9759,
            9831
          ],
          "9": [
            9837,
            9877
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "18": [
            7926,
            8013
          ],
          "19": [
            8756,
            8798
          ],
          "20": [
            8804,
            8843
          ]
        }
      },
      "3": {
        "VRFRequestIDBase.makeRequestId": {
          "30": [
            1515,
            1574
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "27": [
            944,
            1023
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {
        "SafeMathChainlink.add": {
          "28": [
            959,
            1005
          ],
          "29": [
            1012,
            1020
          ]
        }
      },
      "7": {
        "Lottery.endLottery": {
          "1": [
            2315,
            2363
          ],
          "2": [
            2613,
            2648
          ]
        },
        "Lottery.enter": {
          "11": [
            1838,
            1882
          ],
          "12": [
            1892,
            2008
          ],
          "13": [
            2018,
            2042
          ]
        },
        "Lottery.fulfillRandomness": {
          "21": [
            2976,
            3094
          ],
          "22": [
            3104,
            3155
          ],
          "23": [
            3228,
            3265
          ],
          "24": [
            3363,
            3407
          ],
          "25": [
            3447,
            3481
          ],
          "26": [
            3491,
            3527
          ]
        },
        "Lottery.getEntranceFee": {
          "0": [
            4160,
            4199
          ]
        },
        "Lottery.getPrice": {
          "10": [
            3663,
            3699
          ]
        },
        "Lottery.startLottery": {
          "3": [
            2096,
            2209
          ],
          "4": [
            2219,
            2253
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/LinkTokenInterface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/SafeMathChainlink",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/VRFRequestIDBase"
  ],
  "deployedBytecode": "6080604052600436106100fe5760003560e01c8063741bef1a1161009557806398d5fdca1161006457806398d5fdca14610280578063ddca3f4314610295578063e97dcb62146102aa578063f2fde38b146102b2578063f71d96cb146102e5576100fe565b8063741bef1a146101f057806381447999146102055780638da5cb5b1461023b57806394985ddd14610250576100fe565b80634f8c70cf116100d15780634f8c70cf1461016b57806369ebe78e1461019c5780636e5b6b28146101b1578063715018a6146101db576100fe565b8063098de8201461010357806309bc33a71461012a5780631593a8c71461013f578063160344e214610156575b600080fd5b34801561010f57600080fd5b5061011861030f565b60408051918252519081900360200190f35b34801561013657600080fd5b50610118610315565b34801561014b57600080fd5b50610154610344565b005b34801561016257600080fd5b50610154610417565b34801561017757600080fd5b50610180610492565b604080516001600160a01b039092168252519081900360200190f35b3480156101a857600080fd5b506101186104a1565b3480156101bd57600080fd5b50610118600480360360208110156101d457600080fd5b50356104a7565b3480156101e757600080fd5b506101546104c7565b3480156101fc57600080fd5b50610180610585565b34801561021157600080fd5b5061021a610594565b6040518082600281111561022a57fe5b815260200191505060405180910390f35b34801561024757600080fd5b506101806105a4565b34801561025c57600080fd5b506101546004803603604081101561027357600080fd5b50803590602001356105b3565b34801561028c57600080fd5b5061011861063e565b3480156102a157600080fd5b506101186106cb565b6101546106d1565b3480156102be57600080fd5b50610154600480360360208110156102d557600080fd5b50356001600160a01b0316610798565b3480156102f157600080fd5b506101806004803603602081101561030857600080fd5b50356108ad565b60025481565b60008061032061063e565b90506000670de0b6b3a764000090508181600254028161033c57fe5b049250505090565b61034c6108d4565b6001600160a01b031661035d6105a4565b6001600160a01b0316146103b8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6003805460ff60a01b1916600160a11b1790556005546004546000916103dd916108d8565b6040805182815290519192507f55ed974a51aa5443394b8136510c290cd2f01456cf37dec995cc0cc574a78173919081900360200190a150565b6001600354600160a01b900460ff16600281111561043157fe5b14610483576040805162461bcd60e51b815260206004820152601d60248201527f43616e27742073746172742061206e6577206c6f747465727920796574000000604482015290519081900360640190fd5b6003805460ff60a01b19169055565b6007546001600160a01b031681565b60055481565b6000806104b261063e565b670de0b6b3a764000093029290920492915050565b6104cf6108d4565b6001600160a01b03166104e06105a4565b6001600160a01b03161461053b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b6003546001600160a01b031681565b600354600160a01b900460ff1681565b6001546001600160a01b031690565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610630576040805162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015290519081900360640190fd5b61063a8282610a8b565b5050565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d60a08110156106b957600080fd5b50602001516402540be4000291505090565b60045481565b6000600354600160a01b900460ff1660028111156106eb57fe5b146106f557600080fd5b600254610701346104a7565b1015610754576040805162461bcd60e51b815260206004820152601b60248201527f596f75206e65656420746f207370656e64206d6f726520455448210000000000604482015290519081900360640190fd5b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b03191633179055565b6107a06108d4565b6001600160a01b03166107b16105a4565b6001600160a01b03161461080c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108515760405162461bcd60e51b8152600401808060200182810382526026815260200180610d496026913960400191505060405180910390fd5b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600681815481106108ba57fe5b6000918252602090912001546001600160a01b0316905081565b3390565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156109b557818101518382015260200161099d565b50505050905090810190601f1680156109e25780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b505050506040513d6020811015610a2d57600080fd5b5050600083815260208190526040812054610a4d90859083903090610bf0565b600085815260208190526040902054909150610a6a906001610c37565b600085815260208190526040902055610a838482610c98565b949350505050565b6002600354600160a01b900460ff166002811115610aa557fe5b14610af0576040805162461bcd60e51b8152602060048201526016602482015275596f75206172656e277420746865726520796574202160501b604482015290519081900360640190fd5b60008111610b45576040805162461bcd60e51b815260206004820152601760248201527f4e6f2072616e646f6d206e756d62657220666f756e642e000000000000000000604482015290519081900360640190fd5b6006546000908281610b5357fe5b06905060068181548110610b6357fe5b6000918252602082200154600780546001600160a01b0319166001600160a01b0392831617908190556040519116914780156108fc02929091818181858888f19350505050158015610bb9573d6000803e3d6000fd5b506040805160008152602081019182905251610bd791600691610cc4565b50506003805460ff60a01b1916600160a01b1790555050565b60408051602080820196909652808201949094526001600160a01b039290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b600082820183811015610c91576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b828054828255906000526020600020908101928215610d19579160200282015b82811115610d1957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610ce4565b50610d25929150610d29565b5090565b5b80821115610d255780546001600160a01b0319168155600101610d2a56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220cfee0db438da1e340e9c13f7d8d889f06b224c4c2a9f69e20f685c8047dba2ba64736f6c634300060c0033",
  "deployedSourceMap": "712:3496:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3996:210;;;;;;;;;;;;;:::i;2266:389::-;;;;;;;;;;;;;:::i;:::-;;2055:205;;;;;;;;;;;;;:::i;1109:35::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1109:35:7;;;;;;;;;;;;;;1043:22;;;;;;;;;;;;;:::i;3730:260::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3730:260:7;;:::i;1717:145:0:-;;;;;;;;;;;;;:::i;794:38:7:-;;;;;;;;;;;;;:::i;979:34::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:85:0;;;;;;;;;;;;;:::i;9675:207:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9675:207:2;;;;;;;:::i;3540:166:7:-;;;;;;;;;;;;;:::i;1019:18::-;;;;;;;;;;;;;:::i;1796:253::-;;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;1071:32:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1071:32:7;;:::i;763:25::-;;;;:::o;3996:210::-;4043:7;4084:13;4100:10;:8;:10::i;:::-;4084:26;;4120:17;4140:10;4120:30;;4194:5;4181:9;4168:10;;:22;4167:32;;;;;;4160:39;;;;3996:210;:::o;2266:389::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2315:13:7::1;:48:::0;;-1:-1:-1;;;;2315:48:7::1;-1:-1:-1::0;;;2315:48:7::1;::::0;;2445:7:::1;::::0;2454:3:::1;::::0;-1:-1:-1;;2427:31:7::1;::::0;:17:::1;:31::i;:::-;2618:30;::::0;;;;;;;2407:51;;-1:-1:-1;2618:30:7::1;::::0;;;;;::::1;::::0;;::::1;1367:1:0;2266:389:7:o:0;2055:205::-;2134:20;2117:13;;-1:-1:-1;;;2117:13:7;;;;:37;;;;;;;;;2096:113;;;;;-1:-1:-1;;;2096:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:13;:34;;-1:-1:-1;;;;2219:34:7;;;2055:205::o;1109:35::-;;;-1:-1:-1;;;;;1109:35:7;;:::o;1043:22::-;;;;:::o;3730:260::-;3821:7;3844:16;3863:10;:8;:10::i;:::-;3933:19;3909:20;;3908:44;;;;;;-1:-1:-1;;3730:260:7:o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:6:::1;::::0;1786:40:::1;::::0;1823:1:::1;::::0;-1:-1:-1;;;;;1807:6:0::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1836:6;:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;794:38:7:-;;;-1:-1:-1;;;;;794:38:7;;:::o;979:34::-;;;-1:-1:-1;;;979:34:7;;;;;:::o;1085:85:0:-;1157:6;;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;9675:207:2:-;9767:10;-1:-1:-1;;;;;9781:14:2;9767:28;;9759:72;;;;;-1:-1:-1;;;9759:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;9837:40;9855:9;9866:10;9837:17;:40::i;:::-;9675:207;;:::o;3540:166:7:-;3581:7;3603:13;3626:9;;;;;;;;;-1:-1:-1;;;;;3626:9:7;-1:-1:-1;;;;;3626:25:7;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3626:27:7;;;3687:11;3678:20;;-1:-1:-1;;3540:166:7;:::o;1019:18::-;;;;:::o;1796:253::-;1863:18;1846:13;;-1:-1:-1;;;1846:13:7;;;;:35;;;;;;;;;1838:44;;;;;;1945:10;;1913:28;1931:9;1913:17;:28::i;:::-;:42;;1892:116;;;;;-1:-1:-1;;;1892:116:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2018:7;:24;;;;;;;-1:-1:-1;2018:24:7;;;;;;;;-1:-1:-1;;;;;;2018:24:7;2031:10;2018:24;;;1796:253::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6:::1;::::0;2179:38:::1;::::0;2200:6:::1;::::0;2179:38:::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;1071:32:7:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1071:32:7;;-1:-1:-1;1071:32:7;:::o;598:104:1:-;685:10;598:104;:::o;7818:1030:2:-;7899:17;7926:4;-1:-1:-1;;;;;7926:20:2;;7947:14;7963:4;7980:8;6675:1;7969:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7926:87;;;;;;;;;;;;;-1:-1:-1;;;;;7926:87:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8244:15:2;8328:16;;;7926:87;8328:16;;;;;;;8263:82;;8280:8;;8244:15;;8321:4;;8263:16;:82::i;:::-;8775:6;:16;;;;;;;;;;;8244:101;;-1:-1:-1;8775:23:2;;8796:1;8775:20;:23::i;:::-;8756:6;:16;;;;;;;;;;:42;8811:32;8763:8;8835:7;8811:13;:32::i;:::-;8804:39;7818:1030;-1:-1:-1;;;;7818:1030:2:o;2860:674:7:-;3014:32;2997:13;;-1:-1:-1;;;2997:13:7;;;;:49;;;;;;;;;2976:118;;;;;-1:-1:-1;;;2976:118:7;;;;;;;;;;;;-1:-1:-1;;;2976:118:7;;;;;;;;;;;;;;;3126:1;3112:11;:15;3104:51;;;;;-1:-1:-1;;;3104:51:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;3204:7;:14;3166:21;;3190:11;3204:14;3190:28;;;;;3166:52;;3243:7;3251:13;3243:22;;;;;;;;;;;;;;;;;3228:12;:37;;-1:-1:-1;;;;;;3228:37:7;-1:-1:-1;;;;;3243:22:7;;;3228:37;;;;;3363:44;;:12;;;3385:21;3363:44;;;;;3385:21;;3363:44;3243:22;3363:44;3385:21;3363:12;:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3457:24:7;;;3479:1;3457:24;;;;;;;;;3447:34;;;:7;;:34;:::i;:::-;-1:-1:-1;;3491:13:7;:36;;-1:-1:-1;;;;3491:36:7;-1:-1:-1;;;3491:36:7;;;-1:-1:-1;;2860:674:7:o;797:231:3:-;970:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;970:51:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:62;;;;;;797:231::o;863:162:6:-;921:7;948:5;;;967:6;;;;959:46;;;;;-1:-1:-1;;;959:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:1;863:162;-1:-1:-1;;;863:162:6:o;1408:171:3:-;1532:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1522:52;;;;;;1408:171::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    712,
    4208
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741BEF1A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x98D5FDCA GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x2E5 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x81447999 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x250 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x4F8C70CF GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4F8C70CF EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DB JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x98DE820 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x1593A8C7 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x160344E2 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x315 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x344 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x417 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x4A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x4C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x585 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x594 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22A JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x5A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x63E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x6CB JUMP JUMPDEST PUSH2 0x154 PUSH2 0x6D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x798 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x320 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP DUP2 DUP2 PUSH1 0x2 SLOAD MUL DUP2 PUSH2 0x33C JUMPI INVALID JUMPDEST DIV SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35D PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3B8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x3DD SWAP2 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0x55ED974A51AA5443394B8136510C290CD2F01456CF37DEC995CC0CC574A78173 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x431 JUMPI INVALID JUMPDEST EQ PUSH2 0x483 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E27742073746172742061206E6577206C6F747465727920796574000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4B2 PUSH2 0x63E JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 MUL SWAP3 SWAP1 SWAP3 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4E0 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x53B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x630 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x63A DUP3 DUP3 PUSH2 0xA8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD PUSH5 0x2540BE400 MUL SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x6EB JUMPI INVALID JUMPDEST EQ PUSH2 0x6F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x701 CALLVALUE PUSH2 0x4A7 JUMP JUMPDEST LT ISZERO PUSH2 0x754 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F207370656E64206D6F726520455448210000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7B1 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x80C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD49 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8BA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9B5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9E2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA4D SWAP1 DUP6 SWAP1 DUP4 SWAP1 ADDRESS SWAP1 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xA6A SWAP1 PUSH1 0x1 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xA83 DUP5 DUP3 PUSH2 0xC98 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAA5 JUMPI INVALID JUMPDEST EQ PUSH2 0xAF0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x596F75206172656E2774207468657265207965742021 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB45 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072616E646F6D206E756D62657220666F756E642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 DUP3 DUP2 PUSH2 0xB53 JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB63 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xBB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0xBD7 SWAP2 PUSH1 0x6 SWAP2 PUSH2 0xCC4 JUMP JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xD19 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD19 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xCE4 JUMP JUMPDEST POP PUSH2 0xD25 SWAP3 SWAP2 POP PUSH2 0xD29 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD25 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD2A JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220CFEE0DB438DA 0x1E CALLVALUE 0xE SWAP13 SGT 0xF7 0xD8 0xD8 DUP10 CREATE PUSH12 0x224C4C2A9F69E20F685C8047 0xDB LOG2 0xBA PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        712,
        4208
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFE"
    },
    "12": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "SHR",
      "path": "7"
    },
    "19": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "20": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x741BEF1A"
    },
    "25": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "GT",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x95"
    },
    "29": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "30": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "31": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x98D5FDCA"
    },
    "36": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "GT",
      "path": "7"
    },
    "37": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "41": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "42": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x98D5FDCA"
    },
    "47": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "48": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x280"
    },
    "51": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDDCA3F43"
    },
    "58": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x295"
    },
    "62": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "63": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "64": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE97DCB62"
    },
    "69": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "70": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AA"
    },
    "73": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "74": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "75": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "81": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B2"
    },
    "84": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "85": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "86": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF71D96CB"
    },
    "91": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "92": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E5"
    },
    "95": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "96": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFE"
    },
    "99": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMP",
      "path": "7"
    },
    "100": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "101": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "102": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x741BEF1A"
    },
    "107": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "108": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F0"
    },
    "111": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x81447999"
    },
    "118": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "119": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x205"
    },
    "122": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "123": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "124": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "129": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "130": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23B"
    },
    "133": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "134": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "135": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x94985DDD"
    },
    "140": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x250"
    },
    "144": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "145": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFE"
    },
    "148": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMP",
      "path": "7"
    },
    "149": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "150": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "151": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4F8C70CF"
    },
    "156": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "GT",
      "path": "7"
    },
    "157": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "161": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "162": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x4F8C70CF"
    },
    "167": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "168": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16B"
    },
    "171": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x69EBE78E"
    },
    "178": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "179": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C"
    },
    "182": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "183": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "184": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6E5B6B28"
    },
    "189": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "190": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B1"
    },
    "193": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "194": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "195": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "200": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "201": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DB"
    },
    "204": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "205": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFE"
    },
    "208": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMP",
      "path": "7"
    },
    "209": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "210": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "211": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x98DE820"
    },
    "216": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "217": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x103"
    },
    "220": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "221": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "222": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9BC33A7"
    },
    "227": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "228": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12A"
    },
    "231": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "232": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "233": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1593A8C7"
    },
    "238": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "239": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "242": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "243": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "244": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x160344E2"
    },
    "249": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "EQ",
      "path": "7"
    },
    "250": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x156"
    },
    "253": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "254": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "255": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "257": {
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "DUP1",
      "path": "7"
    },
    "258": {
      "first_revert": true,
      "fn": null,
      "offset": [
        712,
        4208
      ],
      "op": "REVERT",
      "path": "7"
    },
    "259": {
      "offset": [
        763,
        788
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "260": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "261": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "DUP1",
      "path": "7"
    },
    "262": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "263": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10F"
    },
    "266": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "267": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "269": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "DUP1",
      "path": "7"
    },
    "270": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "REVERT",
      "path": "7"
    },
    "271": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "272": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "POP",
      "path": "7"
    },
    "273": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118"
    },
    "276": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30F"
    },
    "279": {
      "fn": null,
      "jump": "i",
      "offset": [
        763,
        788
      ],
      "op": "JUMP",
      "path": "7"
    },
    "280": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "281": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "283": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "DUP1",
      "path": "7"
    },
    "284": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "285": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "286": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "DUP3",
      "path": "7"
    },
    "287": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "288": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "289": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "290": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "DUP2",
      "path": "7"
    },
    "291": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "292": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "SUB",
      "path": "7"
    },
    "293": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "295": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "ADD",
      "path": "7"
    },
    "296": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "297": {
      "fn": null,
      "offset": [
        763,
        788
      ],
      "op": "RETURN",
      "path": "7"
    },
    "298": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "299": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "300": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "DUP1",
      "path": "7"
    },
    "301": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "302": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x136"
    },
    "305": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "306": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "308": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "DUP1",
      "path": "7"
    },
    "309": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "REVERT",
      "path": "7"
    },
    "310": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "311": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "POP",
      "path": "7"
    },
    "312": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118"
    },
    "315": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x315"
    },
    "318": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        3996,
        4206
      ],
      "op": "JUMP",
      "path": "7"
    },
    "319": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "320": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "321": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "DUP1",
      "path": "7"
    },
    "322": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "323": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14B"
    },
    "326": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "327": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "329": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "DUP1",
      "path": "7"
    },
    "330": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "REVERT",
      "path": "7"
    },
    "331": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "332": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "POP",
      "path": "7"
    },
    "333": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x154"
    },
    "336": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x344"
    },
    "339": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        2266,
        2655
      ],
      "op": "JUMP",
      "path": "7"
    },
    "340": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "341": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "STOP",
      "path": "7"
    },
    "342": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "343": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "344": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "DUP1",
      "path": "7"
    },
    "345": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "346": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x162"
    },
    "349": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "350": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "352": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "DUP1",
      "path": "7"
    },
    "353": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "REVERT",
      "path": "7"
    },
    "354": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "355": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "POP",
      "path": "7"
    },
    "356": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x154"
    },
    "359": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x417"
    },
    "362": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        2055,
        2260
      ],
      "op": "JUMP",
      "path": "7"
    },
    "363": {
      "offset": [
        1109,
        1144
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "364": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "365": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "DUP1",
      "path": "7"
    },
    "366": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "367": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177"
    },
    "370": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "371": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "373": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "DUP1",
      "path": "7"
    },
    "374": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "REVERT",
      "path": "7"
    },
    "375": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "376": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "POP",
      "path": "7"
    },
    "377": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x180"
    },
    "380": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x492"
    },
    "383": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        1109,
        1144
      ],
      "op": "JUMP",
      "path": "7"
    },
    "384": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "385": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "387": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "DUP1",
      "path": "7"
    },
    "388": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "395": {
      "op": "SHL"
    },
    "396": {
      "op": "SUB"
    },
    "397": {
      "offset": [
        1109,
        1144
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "398": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "399": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "AND",
      "path": "7"
    },
    "400": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "DUP3",
      "path": "7"
    },
    "401": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "402": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "403": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "404": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "DUP2",
      "path": "7"
    },
    "405": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "406": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "SUB",
      "path": "7"
    },
    "407": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "409": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "ADD",
      "path": "7"
    },
    "410": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "411": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "RETURN",
      "path": "7"
    },
    "412": {
      "offset": [
        1043,
        1065
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "413": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "414": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "DUP1",
      "path": "7"
    },
    "415": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "416": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A8"
    },
    "419": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "420": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "422": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "DUP1",
      "path": "7"
    },
    "423": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "REVERT",
      "path": "7"
    },
    "424": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "425": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "POP",
      "path": "7"
    },
    "426": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118"
    },
    "429": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4A1"
    },
    "432": {
      "fn": "Lottery.startLottery",
      "jump": "i",
      "offset": [
        1043,
        1065
      ],
      "op": "JUMP",
      "path": "7"
    },
    "433": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "434": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "435": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "DUP1",
      "path": "7"
    },
    "436": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "437": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BD"
    },
    "440": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "441": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "443": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "DUP1",
      "path": "7"
    },
    "444": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "REVERT",
      "path": "7"
    },
    "445": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "446": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "POP",
      "path": "7"
    },
    "447": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118"
    },
    "450": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "452": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "DUP1",
      "path": "7"
    },
    "453": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "454": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "SUB",
      "path": "7"
    },
    "455": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "457": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "DUP2",
      "path": "7"
    },
    "458": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "LT",
      "path": "7"
    },
    "459": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "460": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D4"
    },
    "463": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "464": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "466": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "DUP1",
      "path": "7"
    },
    "467": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "REVERT",
      "path": "7"
    },
    "468": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "469": {
      "op": "POP"
    },
    "470": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "471": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4A7"
    },
    "474": {
      "fn": "Lottery.getConversionRate",
      "jump": "i",
      "offset": [
        3730,
        3990
      ],
      "op": "JUMP",
      "path": "7"
    },
    "475": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "477": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "478": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "479": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "482": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "483": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "485": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "486": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "REVERT",
      "path": "0"
    },
    "487": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "POP",
      "path": "0"
    },
    "489": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "492": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C7"
    },
    "495": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "496": {
      "offset": [
        794,
        832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "497": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "498": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "DUP1",
      "path": "7"
    },
    "499": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "500": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FC"
    },
    "503": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "504": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "506": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "DUP1",
      "path": "7"
    },
    "507": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "REVERT",
      "path": "7"
    },
    "508": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "509": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "POP",
      "path": "7"
    },
    "510": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x180"
    },
    "513": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x585"
    },
    "516": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        794,
        832
      ],
      "op": "JUMP",
      "path": "7"
    },
    "517": {
      "offset": [
        979,
        1013
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "518": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "519": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DUP1",
      "path": "7"
    },
    "520": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "521": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x211"
    },
    "524": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "525": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "527": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DUP1",
      "path": "7"
    },
    "528": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "REVERT",
      "path": "7"
    },
    "529": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "530": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "POP",
      "path": "7"
    },
    "531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21A"
    },
    "534": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x594"
    },
    "537": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        979,
        1013
      ],
      "op": "JUMP",
      "path": "7"
    },
    "538": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "539": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "541": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "542": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DUP1",
      "path": "7"
    },
    "543": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DUP3",
      "path": "7"
    },
    "544": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "546": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DUP2",
      "path": "7"
    },
    "547": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "GT",
      "path": "7"
    },
    "548": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "549": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22A"
    },
    "552": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "553": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "INVALID",
      "path": "7"
    },
    "554": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "555": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DUP2",
      "path": "7"
    },
    "556": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "559": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "ADD",
      "path": "7"
    },
    "560": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "561": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "POP",
      "path": "7"
    },
    "562": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "POP",
      "path": "7"
    },
    "563": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "565": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "566": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DUP1",
      "path": "7"
    },
    "567": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "568": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "SUB",
      "path": "7"
    },
    "569": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "570": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "RETURN",
      "path": "7"
    },
    "571": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "572": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "574": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "575": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x247"
    },
    "578": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "579": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "581": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "582": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "REVERT",
      "path": "0"
    },
    "583": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "584": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "POP",
      "path": "0"
    },
    "585": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "591": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "592": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "593": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "594": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "595": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "596": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25C"
    },
    "599": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "600": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "602": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "603": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "REVERT",
      "path": "2"
    },
    "604": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "605": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "POP",
      "path": "2"
    },
    "606": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x154"
    },
    "609": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "611": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "612": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "613": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "SUB",
      "path": "2"
    },
    "614": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "616": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "617": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "LT",
      "path": "2"
    },
    "618": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "619": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273"
    },
    "622": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "623": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "625": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "626": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "REVERT",
      "path": "2"
    },
    "627": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "630": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "631": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "632": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "634": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "ADD",
      "path": "2"
    },
    "635": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "636": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B3"
    },
    "639": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9675,
        9882
      ],
      "op": "JUMP",
      "path": "2"
    },
    "640": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "641": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "642": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "DUP1",
      "path": "7"
    },
    "643": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "644": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28C"
    },
    "647": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "648": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "650": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "DUP1",
      "path": "7"
    },
    "651": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "REVERT",
      "path": "7"
    },
    "652": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "653": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "POP",
      "path": "7"
    },
    "654": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118"
    },
    "657": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x63E"
    },
    "660": {
      "fn": "Lottery.getPrice",
      "jump": "i",
      "offset": [
        3540,
        3706
      ],
      "op": "JUMP",
      "path": "7"
    },
    "661": {
      "offset": [
        1019,
        1037
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "662": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "663": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "DUP1",
      "path": "7"
    },
    "664": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "665": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A1"
    },
    "668": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "669": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "671": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "DUP1",
      "path": "7"
    },
    "672": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "REVERT",
      "path": "7"
    },
    "673": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "674": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "POP",
      "path": "7"
    },
    "675": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x118"
    },
    "678": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6CB"
    },
    "681": {
      "fn": "Lottery.getPrice",
      "jump": "i",
      "offset": [
        1019,
        1037
      ],
      "op": "JUMP",
      "path": "7"
    },
    "682": {
      "fn": "Lottery.enter",
      "offset": [
        1796,
        2049
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "683": {
      "fn": "Lottery.enter",
      "offset": [
        1796,
        2049
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x154"
    },
    "686": {
      "fn": "Lottery.enter",
      "offset": [
        1796,
        2049
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D1"
    },
    "689": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        1796,
        2049
      ],
      "op": "JUMP",
      "path": "7"
    },
    "690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "692": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "693": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "694": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "700": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "701": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "702": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "POP",
      "path": "0"
    },
    "704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "709": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "710": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "SUB",
      "path": "0"
    },
    "712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "715": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "LT",
      "path": "0"
    },
    "716": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "717": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "720": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "723": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "724": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "op": "POP"
    },
    "727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "734": {
      "op": "SHL"
    },
    "735": {
      "op": "SUB"
    },
    "736": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "AND",
      "path": "0"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x798"
    },
    "740": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "741": {
      "offset": [
        1071,
        1103
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "742": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "743": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP1",
      "path": "7"
    },
    "744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F1"
    },
    "748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "749": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP1",
      "path": "7"
    },
    "752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "REVERT",
      "path": "7"
    },
    "753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "POP",
      "path": "7"
    },
    "755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x180"
    },
    "758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "760": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP1",
      "path": "7"
    },
    "761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "SUB",
      "path": "7"
    },
    "763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP2",
      "path": "7"
    },
    "766": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "LT",
      "path": "7"
    },
    "767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x308"
    },
    "771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP1",
      "path": "7"
    },
    "775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "REVERT",
      "path": "7"
    },
    "776": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "offset": [
        1071,
        1103
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8AD"
    },
    "782": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1071,
        1103
      ],
      "op": "JUMP",
      "path": "7"
    },
    "783": {
      "offset": [
        763,
        788
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        763,
        788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        763,
        788
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        763,
        788
      ],
      "op": "DUP2",
      "path": "7"
    },
    "788": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        763,
        788
      ],
      "op": "JUMP",
      "path": "7"
    },
    "789": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "790": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4043,
        4050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "792": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4084,
        4097
      ],
      "op": "DUP1",
      "path": "7"
    },
    "793": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4100,
        4110
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x320"
    },
    "796": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4100,
        4108
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x63E"
    },
    "799": {
      "fn": "Lottery.getEntranceFee",
      "jump": "i",
      "offset": [
        4100,
        4110
      ],
      "op": "JUMP",
      "path": "7"
    },
    "800": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4100,
        4110
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "801": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4084,
        4110
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "802": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4084,
        4110
      ],
      "op": "POP",
      "path": "7"
    },
    "803": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4120,
        4137
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "805": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4140,
        4150
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xDE0B6B3A7640000"
    },
    "814": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4120,
        4150
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "815": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4120,
        4150
      ],
      "op": "POP",
      "path": "7"
    },
    "816": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4194,
        4199
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 0
    },
    "817": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4181,
        4190
      ],
      "op": "DUP2",
      "path": "7"
    },
    "818": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4168,
        4178
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "820": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4168,
        4178
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "821": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4168,
        4190
      ],
      "op": "MUL",
      "path": "7"
    },
    "822": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4167,
        4199
      ],
      "op": "DUP2",
      "path": "7"
    },
    "823": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4167,
        4199
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33C"
    },
    "826": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4167,
        4199
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "827": {
      "dev": "Division by zero",
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4167,
        4199
      ],
      "op": "INVALID",
      "path": "7"
    },
    "828": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4167,
        4199
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "829": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4167,
        4199
      ],
      "op": "DIV",
      "path": "7"
    },
    "830": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4160,
        4199
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "831": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4160,
        4199
      ],
      "op": "POP",
      "path": "7"
    },
    "832": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4160,
        4199
      ],
      "op": "POP",
      "path": "7"
    },
    "833": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        4160,
        4199
      ],
      "op": "POP",
      "path": "7"
    },
    "834": {
      "fn": "Lottery.getEntranceFee",
      "offset": [
        3996,
        4206
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "835": {
      "fn": "Lottery.getEntranceFee",
      "jump": "o",
      "offset": [
        3996,
        4206
      ],
      "op": "JUMP",
      "path": "7"
    },
    "836": {
      "fn": "Lottery.endLottery",
      "offset": [
        2266,
        2655
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "837": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34C"
    },
    "840": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "843": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "844": {
      "fn": "Lottery.endLottery",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "851": {
      "op": "SHL"
    },
    "852": {
      "op": "SUB"
    },
    "853": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "854": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35D"
    },
    "857": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "860": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "861": {
      "fn": "Lottery.endLottery",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "868": {
      "op": "SHL"
    },
    "869": {
      "op": "SUB"
    },
    "870": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "871": {
      "fn": "Lottery.endLottery",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "872": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "875": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "876": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "878": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "879": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "886": {
      "op": "SHL"
    },
    "887": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "888": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "889": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "891": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "893": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "894": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "895": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "896": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "897": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "898": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "900": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "901": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "902": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "903": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "936": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "938": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "939": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "940": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "941": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "942": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "943": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "944": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "945": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "946": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "947": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "949": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "950": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "951": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "952": {
      "fn": "Lottery.endLottery",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "953": {
      "fn": "Lottery.endLottery",
      "offset": [
        2315,
        2328
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x3"
    },
    "955": {
      "fn": "Lottery.endLottery",
      "offset": [
        2315,
        2363
      ],
      "op": "DUP1",
      "path": "7"
    },
    "956": {
      "fn": "Lottery.endLottery",
      "offset": [
        2315,
        2363
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "NOT"
    },
    "963": {
      "fn": "Lottery.endLottery",
      "offset": [
        2315,
        2363
      ],
      "op": "AND",
      "path": "7"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "966": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "968": {
      "op": "SHL"
    },
    "969": {
      "fn": "Lottery.endLottery",
      "offset": [
        2315,
        2363
      ],
      "op": "OR",
      "path": "7"
    },
    "970": {
      "fn": "Lottery.endLottery",
      "offset": [
        2315,
        2363
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "971": {
      "fn": "Lottery.endLottery",
      "offset": [
        2315,
        2363
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "972": {
      "fn": "Lottery.endLottery",
      "offset": [
        2445,
        2452
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "974": {
      "fn": "Lottery.endLottery",
      "offset": [
        2445,
        2452
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "975": {
      "fn": "Lottery.endLottery",
      "offset": [
        2454,
        2457
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "977": {
      "fn": "Lottery.endLottery",
      "offset": [
        2454,
        2457
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "980": {
      "op": "SWAP2"
    },
    "981": {
      "fn": "Lottery.endLottery",
      "offset": [
        2427,
        2458
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3DD"
    },
    "984": {
      "fn": "Lottery.endLottery",
      "offset": [
        2427,
        2458
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "985": {
      "fn": "Lottery.endLottery",
      "offset": [
        2427,
        2444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8D8"
    },
    "988": {
      "fn": "Lottery.endLottery",
      "jump": "i",
      "offset": [
        2427,
        2458
      ],
      "op": "JUMP",
      "path": "7"
    },
    "989": {
      "fn": "Lottery.endLottery",
      "offset": [
        2427,
        2458
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "990": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0x40"
    },
    "992": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "DUP1",
      "path": "7"
    },
    "993": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "994": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "DUP3",
      "path": "7"
    },
    "995": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "DUP2",
      "path": "7"
    },
    "996": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "997": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "998": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "999": {
      "fn": "Lottery.endLottery",
      "offset": [
        2407,
        2458
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1000": {
      "fn": "Lottery.endLottery",
      "offset": [
        2407,
        2458
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x55ED974A51AA5443394B8136510C290CD2F01456CF37DEC995CC0CC574A78173"
    },
    "1035": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1036": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1037": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1038": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1039": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "SUB",
      "path": "7"
    },
    "1040": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1042": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "ADD",
      "path": "7"
    },
    "1043": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1044": {
      "fn": "Lottery.endLottery",
      "offset": [
        2618,
        2648
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1045": {
      "offset": [
        1367,
        1368
      ],
      "op": "POP",
      "path": "0"
    },
    "1046": {
      "fn": "Lottery.endLottery",
      "jump": "o",
      "offset": [
        2266,
        2655
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1047": {
      "fn": "Lottery.startLottery",
      "offset": [
        2055,
        2260
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1048": {
      "fn": "Lottery.startLottery",
      "offset": [
        2134,
        2154
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 3,
      "value": "0x1"
    },
    "1050": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1052": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2130
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2130
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1059": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2130
      ],
      "op": "DIV",
      "path": "7"
    },
    "1060": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1062": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2130
      ],
      "op": "AND",
      "path": "7"
    },
    "1063": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1065": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1066": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "GT",
      "path": "7"
    },
    "1067": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1068": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x431"
    },
    "1071": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1072": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1073": {
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1074": {
      "branch": 31,
      "fn": "Lottery.startLottery",
      "offset": [
        2117,
        2154
      ],
      "op": "EQ",
      "path": "7"
    },
    "1075": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x483"
    },
    "1078": {
      "branch": 31,
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1079": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1081": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1082": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1091": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1092": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1094": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1096": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1097": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "ADD",
      "path": "7"
    },
    "1098": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1099": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1D"
    },
    "1101": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "1103": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1104": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "ADD",
      "path": "7"
    },
    "1105": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1106": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x43616E27742073746172742061206E6577206C6F747465727920796574000000"
    },
    "1139": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "1141": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1142": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "ADD",
      "path": "7"
    },
    "1143": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1144": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1145": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1146": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1147": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1148": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1149": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "SUB",
      "path": "7"
    },
    "1150": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "1152": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "ADD",
      "path": "7"
    },
    "1153": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1154": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1155": {
      "fn": "Lottery.startLottery",
      "offset": [
        2096,
        2209
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1156": {
      "fn": "Lottery.startLottery",
      "offset": [
        2219,
        2232
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x3"
    },
    "1158": {
      "fn": "Lottery.startLottery",
      "offset": [
        2219,
        2253
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1159": {
      "fn": "Lottery.startLottery",
      "offset": [
        2219,
        2253
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "op": "NOT"
    },
    "1166": {
      "fn": "Lottery.startLottery",
      "offset": [
        2219,
        2253
      ],
      "op": "AND",
      "path": "7"
    },
    "1167": {
      "fn": "Lottery.startLottery",
      "offset": [
        2219,
        2253
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1168": {
      "fn": "Lottery.startLottery",
      "offset": [
        2219,
        2253
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1169": {
      "fn": "Lottery.startLottery",
      "jump": "o",
      "offset": [
        2055,
        2260
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1170": {
      "offset": [
        1109,
        1144
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1171": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "1173": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "offset": [
        1109,
        1144
      ],
      "op": "AND",
      "path": "7"
    },
    "1183": {
      "fn": "Lottery.startLottery",
      "offset": [
        1109,
        1144
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1184": {
      "fn": "Lottery.startLottery",
      "jump": "o",
      "offset": [
        1109,
        1144
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1185": {
      "offset": [
        1043,
        1065
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1186": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1188": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1189": {
      "fn": "Lottery.startLottery",
      "offset": [
        1043,
        1065
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1190": {
      "fn": "Lottery.startLottery",
      "jump": "o",
      "offset": [
        1043,
        1065
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1191": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3730,
        3990
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1192": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3821,
        3828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1194": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3844,
        3860
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1195": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3863,
        3873
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B2"
    },
    "1198": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3863,
        3871
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x63E"
    },
    "1201": {
      "fn": "Lottery.getConversionRate",
      "jump": "i",
      "offset": [
        3863,
        3873
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1202": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3863,
        3873
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1203": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3933,
        3952
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xDE0B6B3A7640000"
    },
    "1212": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3909,
        3929
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1213": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3909,
        3929
      ],
      "op": "MUL",
      "path": "7"
    },
    "1214": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3908,
        3952
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1215": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3908,
        3952
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1216": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3908,
        3952
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1217": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3908,
        3952
      ],
      "op": "DIV",
      "path": "7"
    },
    "1218": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3908,
        3952
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1219": {
      "fn": "Lottery.getConversionRate",
      "offset": [
        3908,
        3952
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "op": "POP"
    },
    "1222": {
      "fn": "Lottery.getConversionRate",
      "jump": "o",
      "offset": [
        3730,
        3990
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1223": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1224": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CF"
    },
    "1227": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "1230": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "SUB"
    },
    "1240": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "1241": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E0"
    },
    "1244": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "1247": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1248": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "op": "SUB"
    },
    "1257": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "1258": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "1259": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53B"
    },
    "1262": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1263": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1265": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1284": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1285": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1287": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1288": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1323": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1325": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1329": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1330": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1331": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1332": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1333": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "1334": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1336": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "1337": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1338": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x1"
    },
    "1342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1345": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1346": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1348": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "op": "SUB"
    },
    "1357": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "AND",
      "path": "0"
    },
    "1358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1392": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1393": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1394": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1395": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1396": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1842
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "1398": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1399": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "op": "NOT"
    },
    "1409": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "AND",
      "path": "0"
    },
    "1410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1412": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1413": {
      "offset": [
        794,
        832
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1414": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1416": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1423": {
      "op": "SHL"
    },
    "1424": {
      "op": "SUB"
    },
    "1425": {
      "offset": [
        794,
        832
      ],
      "op": "AND",
      "path": "7"
    },
    "1426": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        794,
        832
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1427": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        794,
        832
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1428": {
      "offset": [
        979,
        1013
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1429": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1431": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "offset": [
        979,
        1013
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1438": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DIV",
      "path": "7"
    },
    "1439": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1441": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "AND",
      "path": "7"
    },
    "1442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        979,
        1013
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1443": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        979,
        1013
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1444": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1445": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1447": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "op": "SUB"
    },
    "1456": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "AND",
      "path": "0"
    },
    "1457": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1458": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1459": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1460": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9767,
        9777
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 8
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9781,
        9795
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "1502": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9767,
        9795
      ],
      "op": "AND",
      "path": "2"
    },
    "1503": {
      "branch": 39,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9767,
        9795
      ],
      "op": "EQ",
      "path": "2"
    },
    "1504": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x630"
    },
    "1507": {
      "branch": 39,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1508": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1510": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1511": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1518": {
      "op": "SHL"
    },
    "1519": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1520": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1521": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1523": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1525": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1526": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "ADD",
      "path": "2"
    },
    "1527": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1528": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1530": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "1532": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1533": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "ADD",
      "path": "2"
    },
    "1534": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1535": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "1568": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "1570": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1571": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "ADD",
      "path": "2"
    },
    "1572": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1573": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1574": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1575": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1576": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1577": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1578": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "SUB",
      "path": "2"
    },
    "1579": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "1581": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "ADD",
      "path": "2"
    },
    "1582": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1583": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1584": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9759,
        9831
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1585": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9877
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x63A"
    },
    "1588": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9855,
        9864
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1589": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9866,
        9876
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1590": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA8B"
    },
    "1593": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9837,
        9877
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1594": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9877
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1595": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "POP",
      "path": "2"
    },
    "1596": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9675,
        9882
      ],
      "op": "POP",
      "path": "2"
    },
    "1597": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9675,
        9882
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1598": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1599": {
      "fn": "Lottery.getPrice",
      "offset": [
        3581,
        3588
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1601": {
      "fn": "Lottery.getPrice",
      "offset": [
        3603,
        3616
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1602": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1604": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1606": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1607": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1608": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1609": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "1612": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "EXP",
      "path": "7"
    },
    "1613": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1614": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "DIV",
      "path": "7"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1621": {
      "op": "SHL"
    },
    "1622": {
      "op": "SUB"
    },
    "1623": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3635
      ],
      "op": "AND",
      "path": "7"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1630": {
      "op": "SHL"
    },
    "1631": {
      "op": "SUB"
    },
    "1632": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3651
      ],
      "op": "AND",
      "path": "7"
    },
    "1633": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3651
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFEAF968C"
    },
    "1638": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1640": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1641": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1642": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1647": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "AND",
      "path": "7"
    },
    "1648": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "1650": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "SHL",
      "path": "7"
    },
    "1651": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1652": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1653": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1655": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "ADD",
      "path": "7"
    },
    "1656": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "1658": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1660": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1661": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1662": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1663": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "SUB",
      "path": "7"
    },
    "1664": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1665": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1666": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1667": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "1668": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1669": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1670": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1671": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x68F"
    },
    "1674": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1675": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1677": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1678": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1679": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1680": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "POP",
      "path": "7"
    },
    "1681": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "GAS",
      "path": "7"
    },
    "1682": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "1683": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1684": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1685": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1686": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A3"
    },
    "1689": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1690": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1691": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1693": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1694": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "1695": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1696": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1698": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1699": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1700": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "POP",
      "path": "7"
    },
    "1701": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "POP",
      "path": "7"
    },
    "1702": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "POP",
      "path": "7"
    },
    "1703": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "POP",
      "path": "7"
    },
    "1704": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1706": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1707": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1708": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "1710": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1711": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "LT",
      "path": "7"
    },
    "1712": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1713": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6B9"
    },
    "1716": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1717": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1719": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1720": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1721": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1722": {
      "op": "POP"
    },
    "1723": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1725": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "ADD",
      "path": "7"
    },
    "1726": {
      "fn": "Lottery.getPrice",
      "offset": [
        3626,
        3653
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1727": {
      "fn": "Lottery.getPrice",
      "offset": [
        3687,
        3698
      ],
      "op": "PUSH5",
      "path": "7",
      "statement": 10,
      "value": "0x2540BE400"
    },
    "1733": {
      "fn": "Lottery.getPrice",
      "offset": [
        3678,
        3698
      ],
      "op": "MUL",
      "path": "7"
    },
    "1734": {
      "fn": "Lottery.getPrice",
      "offset": [
        3678,
        3698
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1735": {
      "op": "POP"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "fn": "Lottery.getPrice",
      "offset": [
        3540,
        3706
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1738": {
      "fn": "Lottery.getPrice",
      "jump": "o",
      "offset": [
        3540,
        3706
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1739": {
      "offset": [
        1019,
        1037
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1740": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1742": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1743": {
      "fn": "Lottery.getPrice",
      "offset": [
        1019,
        1037
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1744": {
      "fn": "Lottery.getPrice",
      "jump": "o",
      "offset": [
        1019,
        1037
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1745": {
      "fn": "Lottery.enter",
      "offset": [
        1796,
        2049
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1746": {
      "fn": "Lottery.enter",
      "offset": [
        1863,
        1881
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x0"
    },
    "1748": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1859
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1750": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1859
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1859
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1757": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1859
      ],
      "op": "DIV",
      "path": "7"
    },
    "1758": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1859
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1760": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1859
      ],
      "op": "AND",
      "path": "7"
    },
    "1761": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1763": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1764": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "GT",
      "path": "7"
    },
    "1765": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1766": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6EB"
    },
    "1769": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1770": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1771": {
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1772": {
      "branch": 32,
      "fn": "Lottery.enter",
      "offset": [
        1846,
        1881
      ],
      "op": "EQ",
      "path": "7"
    },
    "1773": {
      "fn": "Lottery.enter",
      "offset": [
        1838,
        1882
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6F5"
    },
    "1776": {
      "branch": 32,
      "fn": "Lottery.enter",
      "offset": [
        1838,
        1882
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1777": {
      "fn": "Lottery.enter",
      "offset": [
        1838,
        1882
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1779": {
      "fn": "Lottery.enter",
      "offset": [
        1838,
        1882
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1780": {
      "fn": "Lottery.enter",
      "offset": [
        1838,
        1882
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1781": {
      "fn": "Lottery.enter",
      "offset": [
        1838,
        1882
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1782": {
      "fn": "Lottery.enter",
      "offset": [
        1945,
        1955
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 12,
      "value": "0x2"
    },
    "1784": {
      "fn": "Lottery.enter",
      "offset": [
        1945,
        1955
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1785": {
      "fn": "Lottery.enter",
      "offset": [
        1913,
        1941
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x701"
    },
    "1788": {
      "fn": "Lottery.enter",
      "offset": [
        1931,
        1940
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1789": {
      "fn": "Lottery.enter",
      "offset": [
        1913,
        1930
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4A7"
    },
    "1792": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        1913,
        1941
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1793": {
      "fn": "Lottery.enter",
      "offset": [
        1913,
        1941
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1794": {
      "fn": "Lottery.enter",
      "offset": [
        1913,
        1955
      ],
      "op": "LT",
      "path": "7"
    },
    "1795": {
      "branch": 33,
      "fn": "Lottery.enter",
      "offset": [
        1913,
        1955
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1796": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x754"
    },
    "1799": {
      "branch": 33,
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1800": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1802": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1803": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1810": {
      "op": "SHL"
    },
    "1811": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1812": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1813": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1815": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1817": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1818": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "ADD",
      "path": "7"
    },
    "1819": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1820": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1B"
    },
    "1822": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "1824": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1825": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "ADD",
      "path": "7"
    },
    "1826": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1827": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x596F75206E65656420746F207370656E64206D6F726520455448210000000000"
    },
    "1860": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "1862": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1863": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "ADD",
      "path": "7"
    },
    "1864": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1865": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1866": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1867": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1868": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1869": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1870": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "SUB",
      "path": "7"
    },
    "1871": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "1873": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "ADD",
      "path": "7"
    },
    "1874": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1875": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1876": {
      "fn": "Lottery.enter",
      "offset": [
        1892,
        2008
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1877": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2025
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 13,
      "value": "0x6"
    },
    "1879": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1880": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1881": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1883": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1884": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "ADD",
      "path": "7"
    },
    "1885": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1886": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1889": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1890": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1891": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1892": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1893": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1926": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "ADD",
      "path": "7"
    },
    "1927": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1928": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1935": {
      "op": "SHL"
    },
    "1936": {
      "op": "SUB"
    },
    "1937": {
      "op": "NOT"
    },
    "1938": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "AND",
      "path": "7"
    },
    "1939": {
      "fn": "Lottery.enter",
      "offset": [
        2031,
        2041
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1940": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "OR",
      "path": "7"
    },
    "1941": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1942": {
      "fn": "Lottery.enter",
      "offset": [
        2018,
        2042
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1943": {
      "fn": "Lottery.enter",
      "jump": "o",
      "offset": [
        1796,
        2049
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1945": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A0"
    },
    "1948": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "1951": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1959": {
      "op": "SHL"
    },
    "1960": {
      "op": "SUB"
    },
    "1961": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "1962": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "1965": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A4"
    },
    "1968": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "op": "SUB"
    },
    "1978": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "1979": {
      "branch": 36,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "1980": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80C"
    },
    "1983": {
      "branch": 36,
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1987": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1994": {
      "op": "SHL"
    },
    "1995": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1999": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "2003": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2008": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "2010": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2011": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2047": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "2048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2054": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "2055": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2057": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "2058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2060": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "op": "SUB"
    },
    "2069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2070": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "2071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x851"
    },
    "2074": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2084": {
      "op": "SHL"
    },
    "2085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2086": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "2090": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2091": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2092": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "2095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "0"
    },
    "2098": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2099": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "2102": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2104": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "2107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD49"
    },
    "2111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "2113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2115": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "2118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "2120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "2121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "0"
    },
    "2127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x1"
    },
    "2132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "op": "SUB"
    },
    "2144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "AND",
      "path": "0"
    },
    "2147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "AND",
      "path": "0"
    },
    "2149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2150": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2183": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2187": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2188": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2233
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x1"
    },
    "2190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "op": "SUB"
    },
    "2200": {
      "op": "NOT"
    },
    "2201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2208": {
      "op": "SHL"
    },
    "2209": {
      "op": "SUB"
    },
    "2210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2213": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "2214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "OR",
      "path": "0"
    },
    "2218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2220": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2221": {
      "offset": [
        1071,
        1103
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2227": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "LT",
      "path": "7"
    },
    "2229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8BA"
    },
    "2232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2242": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "ADD",
      "path": "7"
    },
    "2246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2253": {
      "op": "SHL"
    },
    "2254": {
      "op": "SUB"
    },
    "2255": {
      "offset": [
        1071,
        1103
      ],
      "op": "AND",
      "path": "7"
    },
    "2256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1071,
        1103
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2257": {
      "op": "POP"
    },
    "2258": {
      "offset": [
        1071,
        1103
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2259": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1071,
        1103
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2260": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2261": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 17
    },
    "2262": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2263": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2264": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7818,
        8848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2265": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7899,
        7916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2267": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        7930
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 18,
      "value": "0x0"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2306": {
      "op": "SHL"
    },
    "2307": {
      "op": "SUB"
    },
    "2308": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        7946
      ],
      "op": "AND",
      "path": "2"
    },
    "2309": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        7946
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4000AEA0"
    },
    "2314": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7947,
        7961
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x0"
    },
    "2347": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7963,
        7967
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2348": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7980,
        7988
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2349": {
      "offset": [
        6675,
        6676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2351": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2353": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2354": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2356": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "ADD",
      "path": "2"
    },
    "2357": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2358": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2359": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2360": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2361": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2363": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "ADD",
      "path": "2"
    },
    "2364": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2365": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2366": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2367": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2369": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "ADD",
      "path": "2"
    },
    "2370": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2371": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "POP",
      "path": "2"
    },
    "2372": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "POP",
      "path": "2"
    },
    "2373": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "POP",
      "path": "2"
    },
    "2374": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2376": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2377": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2379": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2380": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2381": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "SUB",
      "path": "2"
    },
    "2382": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "SUB",
      "path": "2"
    },
    "2383": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2384": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2385": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2386": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2388": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7969,
        8012
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2389": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2391": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2392": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2393": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2398": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "AND",
      "path": "2"
    },
    "2399": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2401": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SHL",
      "path": "2"
    },
    "2402": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2403": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2404": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2406": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2407": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2408": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2415": {
      "op": "SHL"
    },
    "2416": {
      "op": "SUB"
    },
    "2417": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "AND",
      "path": "2"
    },
    "2418": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2419": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2420": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2422": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2423": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2424": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2425": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2426": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2428": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2429": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2430": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2432": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2433": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2434": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2435": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SUB",
      "path": "2"
    },
    "2436": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2437": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2438": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2439": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2440": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2441": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2442": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2443": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2444": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2446": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2447": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2448": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2449": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2450": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2451": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2452": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2454": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2455": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2456": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2457": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2458": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2459": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2461": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2462": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2463": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2464": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "LT",
      "path": "2"
    },
    "2465": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2466": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B5"
    },
    "2469": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2470": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2471": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2472": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2473": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2474": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2475": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2476": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2477": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2478": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2480": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2481": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x99D"
    },
    "2484": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2485": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2486": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2487": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2488": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2489": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2490": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2491": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2492": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2493": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2494": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2495": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2496": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2498": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "AND",
      "path": "2"
    },
    "2499": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2500": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2501": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E2"
    },
    "2504": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2505": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2506": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2507": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SUB",
      "path": "2"
    },
    "2508": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2509": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2510": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2512": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2513": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2515": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SUB",
      "path": "2"
    },
    "2516": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2519": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "EXP",
      "path": "2"
    },
    "2520": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SUB",
      "path": "2"
    },
    "2521": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "NOT",
      "path": "2"
    },
    "2522": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "AND",
      "path": "2"
    },
    "2523": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2524": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2525": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2527": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ADD",
      "path": "2"
    },
    "2528": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2529": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2530": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2531": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2532": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2533": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2534": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2535": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2536": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2537": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2538": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2540": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2542": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2543": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2544": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2545": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "SUB",
      "path": "2"
    },
    "2546": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2547": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2549": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2550": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2551": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2552": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2553": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2554": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2555": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA03"
    },
    "2558": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2559": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2561": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2562": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2563": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2564": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2565": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "GAS",
      "path": "2"
    },
    "2566": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "CALL",
      "path": "2"
    },
    "2567": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2568": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2569": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2570": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA17"
    },
    "2573": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2574": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2575": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2577": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2578": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2579": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2580": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2582": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2583": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2584": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2585": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2586": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2587": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "POP",
      "path": "2"
    },
    "2588": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2590": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2591": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2592": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2594": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2595": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "LT",
      "path": "2"
    },
    "2596": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2597": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2D"
    },
    "2600": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2601": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2603": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2604": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2605": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8244,
        8259
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2610": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2611": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2612": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2613": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7926,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2615": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2616": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2617": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2618": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2620": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2621": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2622": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8328,
        8344
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2623": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8263,
        8345
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA4D"
    },
    "2626": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8263,
        8345
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2627": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8280,
        8288
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2628": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8280,
        8288
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2629": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8244,
        8259
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2630": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8244,
        8259
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2631": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8321,
        8325
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2632": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8321,
        8325
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2633": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8263,
        8279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBF0"
    },
    "2636": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8263,
        8345
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2637": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8263,
        8345
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2638": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8781
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x0"
    },
    "2640": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2641": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2642": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2643": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2645": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2646": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2647": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2648": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2650": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2651": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2652": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8791
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2653": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8244,
        8345
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2654": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8244,
        8345
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2655": {
      "op": "POP"
    },
    "2656": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8798
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6A"
    },
    "2659": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2660": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8796,
        8797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2662": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8795
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC37"
    },
    "2665": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8775,
        8798
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2666": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8775,
        8798
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2667": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2669": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2670": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2671": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2672": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2674": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2675": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2676": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2677": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2679": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2680": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8772
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2681": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8798
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2682": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8811,
        8843
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0xA83"
    },
    "2685": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8763,
        8771
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2686": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8835,
        8842
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2687": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8811,
        8824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC98"
    },
    "2690": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8811,
        8843
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2691": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8811,
        8843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2692": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8804,
        8843
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2693": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7818,
        8848
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2694": {
      "op": "POP"
    },
    "2695": {
      "op": "POP"
    },
    "2696": {
      "op": "POP"
    },
    "2697": {
      "op": "POP"
    },
    "2698": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7818,
        8848
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2699": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2860,
        3534
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2700": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3014,
        3046
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0x2"
    },
    "2702": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3010
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2704": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3010
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2709": {
      "op": "SHL"
    },
    "2710": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3010
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2711": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3010
      ],
      "op": "DIV",
      "path": "7"
    },
    "2712": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3010
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "2714": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3010
      ],
      "op": "AND",
      "path": "7"
    },
    "2715": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2717": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2718": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "GT",
      "path": "7"
    },
    "2719": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2720": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAA5"
    },
    "2723": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2724": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2725": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2726": {
      "branch": 34,
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2997,
        3046
      ],
      "op": "EQ",
      "path": "7"
    },
    "2727": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAF0"
    },
    "2730": {
      "branch": 34,
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2731": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2733": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2734": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2741": {
      "op": "SHL"
    },
    "2742": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2743": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2744": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2746": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2748": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2749": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "ADD",
      "path": "7"
    },
    "2750": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2751": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x16"
    },
    "2753": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "2755": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2756": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "ADD",
      "path": "7"
    },
    "2757": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2758": {
      "op": "PUSH22",
      "value": "0x596F75206172656E2774207468657265207965742021"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2783": {
      "op": "SHL"
    },
    "2784": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "2786": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2787": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "ADD",
      "path": "7"
    },
    "2788": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2789": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2790": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2791": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2792": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2793": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2794": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "SUB",
      "path": "7"
    },
    "2795": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "2797": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "ADD",
      "path": "7"
    },
    "2798": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2799": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2800": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        2976,
        3094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2801": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3126,
        3127
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 22,
      "value": "0x0"
    },
    "2803": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3112,
        3123
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2804": {
      "branch": 35,
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3112,
        3127
      ],
      "op": "GT",
      "path": "7"
    },
    "2805": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB45"
    },
    "2808": {
      "branch": 35,
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2809": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2811": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2812": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2821": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2822": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2824": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2826": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2827": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "ADD",
      "path": "7"
    },
    "2828": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2829": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x17"
    },
    "2831": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "2833": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2834": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "ADD",
      "path": "7"
    },
    "2835": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2836": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x4E6F2072616E646F6D206E756D62657220666F756E642E000000000000000000"
    },
    "2869": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "2871": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2872": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "ADD",
      "path": "7"
    },
    "2873": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2874": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2875": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2876": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2877": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2878": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2879": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "SUB",
      "path": "7"
    },
    "2880": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "2882": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "ADD",
      "path": "7"
    },
    "2883": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2884": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2885": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3104,
        3155
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2886": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3204,
        3211
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2888": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3204,
        3218
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2889": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3166,
        3187
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2891": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3166,
        3187
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2892": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3190,
        3201
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2893": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3204,
        3218
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2894": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3190,
        3218
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB53"
    },
    "2897": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3190,
        3218
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2898": {
      "dev": "Modulus by zero",
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3190,
        3218
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2899": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3190,
        3218
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2900": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3190,
        3218
      ],
      "op": "MOD",
      "path": "7"
    },
    "2901": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3166,
        3218
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2902": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3166,
        3218
      ],
      "op": "POP",
      "path": "7"
    },
    "2903": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3250
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 23,
      "value": "0x6"
    },
    "2905": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3251,
        3264
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2906": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2907": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2908": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2909": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "LT",
      "path": "7"
    },
    "2910": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB63"
    },
    "2913": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2914": {
      "dev": "Index out of range",
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2915": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2916": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2918": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2919": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2920": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2921": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2923": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2924": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2925": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "ADD",
      "path": "7"
    },
    "2926": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2927": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3240
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "2929": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3265
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2930": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3265
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "op": "SUB"
    },
    "2939": {
      "op": "NOT"
    },
    "2940": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3265
      ],
      "op": "AND",
      "path": "7"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2947": {
      "op": "SHL"
    },
    "2948": {
      "op": "SUB"
    },
    "2949": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2950": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2951": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "AND",
      "path": "7"
    },
    "2952": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3265
      ],
      "op": "OR",
      "path": "7"
    },
    "2953": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3265
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2954": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3265
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2955": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3265
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2956": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3228,
        3265
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2957": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 24,
      "value": "0x40"
    },
    "2959": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2960": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3375
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2961": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3375
      ],
      "op": "AND",
      "path": "7"
    },
    "2962": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3375
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2963": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3385,
        3406
      ],
      "op": "SELFBALANCE",
      "path": "7"
    },
    "2964": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2965": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2966": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FC"
    },
    "2969": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "MUL",
      "path": "7"
    },
    "2970": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2971": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3385,
        3406
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2972": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3385,
        3406
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2973": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2974": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3243,
        3265
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2975": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2976": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3385,
        3406
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2977": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3375
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2978": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "DUP9",
      "path": "7"
    },
    "2979": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "CALL",
      "path": "7"
    },
    "2980": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2981": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "POP",
      "path": "7"
    },
    "2982": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "POP",
      "path": "7"
    },
    "2983": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "POP",
      "path": "7"
    },
    "2984": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "POP",
      "path": "7"
    },
    "2985": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2986": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2987": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2988": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB9"
    },
    "2991": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2992": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2993": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2995": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2996": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "2997": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "2998": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3000": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3001": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3363,
        3407
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3002": {
      "op": "POP"
    },
    "3003": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 25,
      "value": "0x40"
    },
    "3005": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3006": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3007": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3479,
        3480
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3009": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3010": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3011": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3013": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3014": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "ADD",
      "path": "7"
    },
    "3015": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3016": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3017": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3018": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3457,
        3481
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3019": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3447,
        3481
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3020": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3447,
        3481
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBD7"
    },
    "3023": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3447,
        3481
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3024": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3447,
        3454
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3026": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3447,
        3454
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3027": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3447,
        3481
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCC4"
    },
    "3030": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        3447,
        3481
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3031": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3447,
        3481
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3032": {
      "op": "POP"
    },
    "3033": {
      "op": "POP"
    },
    "3034": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3491,
        3504
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x3"
    },
    "3036": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3491,
        3527
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3037": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3491,
        3527
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "op": "NOT"
    },
    "3044": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3491,
        3527
      ],
      "op": "AND",
      "path": "7"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3491,
        3527
      ],
      "op": "OR",
      "path": "7"
    },
    "3051": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3491,
        3527
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3052": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        3491,
        3527
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3053": {
      "op": "POP"
    },
    "3054": {
      "op": "POP"
    },
    "3055": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "o",
      "offset": [
        2860,
        3534
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3056": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        797,
        1028
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3057": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0x40"
    },
    "3059": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3060": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3061": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3063": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3064": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3065": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "ADD",
      "path": "3"
    },
    "3066": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3067": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3068": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3069": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3070": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3071": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3072": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "ADD",
      "path": "3"
    },
    "3073": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3074": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3075": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3076": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3083": {
      "op": "SHL"
    },
    "3084": {
      "op": "SUB"
    },
    "3085": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3086": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3087": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3088": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "AND",
      "path": "3"
    },
    "3089": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3091": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3092": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "ADD",
      "path": "3"
    },
    "3093": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3094": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "3096": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3097": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3098": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "ADD",
      "path": "3"
    },
    "3099": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3100": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3101": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3102": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3103": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3104": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3105": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3106": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3107": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SUB",
      "path": "3"
    },
    "3108": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3109": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3110": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "ADD",
      "path": "3"
    },
    "3111": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3112": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3113": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "3115": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3116": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3117": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "ADD",
      "path": "3"
    },
    "3118": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3119": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        970,
        1021
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3120": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        960,
        1022
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3121": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        960,
        1022
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3122": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        960,
        1022
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3123": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        960,
        1022
      ],
      "op": "ADD",
      "path": "3"
    },
    "3124": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        960,
        1022
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3125": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        960,
        1022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3126": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "jump": "o",
      "offset": [
        797,
        1028
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3127": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        863,
        1025
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3128": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        921,
        928
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3130": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        948,
        953
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3131": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        948,
        953
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3132": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        948,
        953
      ],
      "op": "ADD",
      "path": "6"
    },
    "3133": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        967,
        973
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 28
    },
    "3134": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        967,
        973
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3135": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        967,
        973
      ],
      "op": "LT",
      "path": "6"
    },
    "3136": {
      "branch": 38,
      "fn": "SafeMathChainlink.add",
      "offset": [
        967,
        973
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3137": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC91"
    },
    "3140": {
      "branch": 38,
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3141": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3143": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3144": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3153": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3154": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3156": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3158": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3159": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "ADD",
      "path": "6"
    },
    "3160": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3161": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1B"
    },
    "3163": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "3165": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3166": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "ADD",
      "path": "6"
    },
    "3167": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3168": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3201": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "3203": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3204": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "ADD",
      "path": "6"
    },
    "3205": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3206": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3207": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3208": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3209": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3210": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3211": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SUB",
      "path": "6"
    },
    "3212": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "3214": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "ADD",
      "path": "6"
    },
    "3215": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3216": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3217": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        959,
        1005
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3218": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        1019,
        1020
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 29
    },
    "3219": {
      "fn": "SafeMathChainlink.add",
      "offset": [
        863,
        1025
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3220": {
      "op": "POP"
    },
    "3221": {
      "op": "POP"
    },
    "3222": {
      "op": "POP"
    },
    "3223": {
      "fn": "SafeMathChainlink.add",
      "jump": "o",
      "offset": [
        863,
        1025
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3224": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1408,
        1579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3225": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 30,
      "value": "0x40"
    },
    "3227": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3228": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3229": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3231": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3232": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3233": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "ADD",
      "path": "3"
    },
    "3234": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3235": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3236": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3237": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3238": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3239": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3240": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "ADD",
      "path": "3"
    },
    "3241": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3242": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3243": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3244": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3245": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3246": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3247": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3248": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3249": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SUB",
      "path": "3"
    },
    "3250": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3251": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "ADD",
      "path": "3"
    },
    "3252": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3253": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3254": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3256": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3257": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3258": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "ADD",
      "path": "3"
    },
    "3259": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3260": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1532,
        1573
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3261": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1522,
        1574
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3262": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1522,
        1574
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3263": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1522,
        1574
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3264": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1522,
        1574
      ],
      "op": "ADD",
      "path": "3"
    },
    "3265": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1522,
        1574
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3266": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1522,
        1574
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3267": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "jump": "o",
      "offset": [
        1408,
        1579
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3268": {
      "op": "JUMPDEST"
    },
    "3269": {
      "op": "DUP3"
    },
    "3270": {
      "op": "DUP1"
    },
    "3271": {
      "op": "SLOAD"
    },
    "3272": {
      "op": "DUP3"
    },
    "3273": {
      "op": "DUP3"
    },
    "3274": {
      "op": "SSTORE"
    },
    "3275": {
      "op": "SWAP1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3278": {
      "op": "MSTORE"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3283": {
      "op": "KECCAK256"
    },
    "3284": {
      "op": "SWAP1"
    },
    "3285": {
      "op": "DUP2"
    },
    "3286": {
      "op": "ADD"
    },
    "3287": {
      "op": "SWAP3"
    },
    "3288": {
      "op": "DUP3"
    },
    "3289": {
      "op": "ISZERO"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "3293": {
      "op": "JUMPI"
    },
    "3294": {
      "op": "SWAP2"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3297": {
      "op": "MUL"
    },
    "3298": {
      "op": "DUP3"
    },
    "3299": {
      "op": "ADD"
    },
    "3300": {
      "op": "JUMPDEST"
    },
    "3301": {
      "op": "DUP3"
    },
    "3302": {
      "op": "DUP2"
    },
    "3303": {
      "op": "GT"
    },
    "3304": {
      "op": "ISZERO"
    },
    "3305": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "3308": {
      "op": "JUMPI"
    },
    "3309": {
      "op": "DUP3"
    },
    "3310": {
      "op": "MLOAD"
    },
    "3311": {
      "op": "DUP3"
    },
    "3312": {
      "op": "SLOAD"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "SUB"
    },
    "3321": {
      "op": "NOT"
    },
    "3322": {
      "op": "AND"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "op": "SUB"
    },
    "3331": {
      "op": "SWAP1"
    },
    "3332": {
      "op": "SWAP2"
    },
    "3333": {
      "op": "AND"
    },
    "3334": {
      "op": "OR"
    },
    "3335": {
      "op": "DUP3"
    },
    "3336": {
      "op": "SSTORE"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3339": {
      "op": "SWAP1"
    },
    "3340": {
      "op": "SWAP3"
    },
    "3341": {
      "op": "ADD"
    },
    "3342": {
      "op": "SWAP2"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3345": {
      "op": "SWAP1"
    },
    "3346": {
      "op": "SWAP2"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "SWAP1"
    },
    "3349": {
      "op": "PUSH2",
      "value": "0xCE4"
    },
    "3352": {
      "op": "JUMP"
    },
    "3353": {
      "op": "JUMPDEST"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "op": "PUSH2",
      "value": "0xD25"
    },
    "3358": {
      "op": "SWAP3"
    },
    "3359": {
      "op": "SWAP2"
    },
    "3360": {
      "op": "POP"
    },
    "3361": {
      "op": "PUSH2",
      "value": "0xD29"
    },
    "3364": {
      "op": "JUMP"
    },
    "3365": {
      "op": "JUMPDEST"
    },
    "3366": {
      "op": "POP"
    },
    "3367": {
      "op": "SWAP1"
    },
    "3368": {
      "op": "JUMP"
    },
    "3369": {
      "op": "JUMPDEST"
    },
    "3370": {
      "op": "JUMPDEST"
    },
    "3371": {
      "op": "DUP1"
    },
    "3372": {
      "op": "DUP3"
    },
    "3373": {
      "op": "GT"
    },
    "3374": {
      "op": "ISZERO"
    },
    "3375": {
      "op": "PUSH2",
      "value": "0xD25"
    },
    "3378": {
      "op": "JUMPI"
    },
    "3379": {
      "op": "DUP1"
    },
    "3380": {
      "op": "SLOAD"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3387": {
      "op": "SHL"
    },
    "3388": {
      "op": "SUB"
    },
    "3389": {
      "op": "NOT"
    },
    "3390": {
      "op": "AND"
    },
    "3391": {
      "op": "DUP2"
    },
    "3392": {
      "op": "SSTORE"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "op": "PUSH2",
      "value": "0xD2A"
    },
    "3399": {
      "op": "JUMP"
    }
  },
  "sha1": "f9b3c2342345db4d8cd595732b0083001e641cb0",
  "source": "/**\n    Smart Contract to implement a lottery's behaviour. The lottery can\n    only be opened and closed by an administrator, anyone can enter it\n    when it is open at the condition that they fund it with enough ETH\n    (50$ worth). When it is closed, the lottery picks a winner at random\n    and transfer its balance to the winner's account.\n    In-function comments were written for learning purposes.\n\n    @ author: Anton Sirgue\n    @version: 22/01/2022\n */\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.6;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\";\n\ncontract Lottery is VRFConsumerBase, Ownable {\n    uint256 public minimumUsd;\n    AggregatorV3Interface public priceFeed;\n    enum LOTTERY_STATE {\n        OPEN,\n        CLOSED,\n        CALCULATING_WINNER\n    }\n\n    // these diff states are represnted by nbs 0-1\n\n    LOTTERY_STATE public lottery_state;\n    uint256 public fee;\n    bytes32 public keyhash;\n    address payable[] public players;\n    address payable public recentWinner;\n    event requestedRandomness(bytes32 requestId);\n\n    // we 'fit' the constructor for the VRFConsumerBase contract in the constructor of this contract, each parameeter of the constructor of VRFConsumerBase is first passed to our 'normal' constructor\n    constructor(\n        address _priceFeed,\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyhash\n    ) public VRFConsumerBase(_vrfCoordinator, _link) {\n        priceFeed = AggregatorV3Interface(_priceFeed);\n        minimumUsd = 50 * (10**18);\n        lottery_state = LOTTERY_STATE.CLOSED;\n        fee = _fee;\n        keyhash = _keyhash;\n    }\n\n    function enter() public payable {\n        require(lottery_state == LOTTERY_STATE.OPEN);\n        require(\n            getConversionRate(msg.value) >= minimumUsd,\n            \"You need to spend more ETH!\"\n        );\n        players.push(msg.sender);\n    }\n\n    function startLottery() public {\n        require(\n            lottery_state == LOTTERY_STATE.CLOSED,\n            \"Can't start a new lottery yet\"\n        );\n        lottery_state = LOTTERY_STATE.OPEN;\n    }\n\n    function endLottery() public onlyOwner {\n        lottery_state = LOTTERY_STATE.CALCULATING_WINNER;\n\n        // Request random number\n        bytes32 requestId = requestRandomness(keyhash, fee); // request and receive mentality: here we call and then the chainlink will 'send' a random number to another function called 'fulfillRandomness'\n        emit requestedRandomness(requestId);\n    }\n\n    // We make it internal so the Chainlink node is the only one to be able to call it, it calls the VRFConsumerBase than then calls our function. This is essential to protecting from manipulations.\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness)\n        internal\n        override\n    {\n        require(\n            lottery_state == LOTTERY_STATE.CALCULATING_WINNER,\n            \"You aren't there yet !\"\n        );\n        require(_randomness > 0, \"No random number found.\");\n\n        uint256 indexOfWinner = _randomness % players.length;\n        recentWinner = players[indexOfWinner];\n\n        // Now we want to pay the winner all the money that accumulated in the lottery\n        recentWinner.transfer(address(this).balance);\n\n        // Reset the lottery\n        players = new address payable[](0);\n        lottery_state = LOTTERY_STATE.CLOSED;\n    }\n\n    function getPrice() public view returns (uint256) {\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\n        return uint256(answer * 10000000000);\n    }\n\n    // 1000000000\n    function getConversionRate(uint256 ethAmount)\n        public\n        view\n        returns (uint256)\n    {\n        uint256 ethPrice = getPrice();\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\n        return ethAmountInUsd;\n    }\n\n    function getEntranceFee() public view returns (uint256) {\n        // minimumUSD\n        uint256 price = getPrice();\n        uint256 precision = 1 * 10**18;\n        return (minimumUsd * precision) / price;\n    }\n}\n",
  "sourceMap": "712:3496:7:-:0;;;1401:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1401:389:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9405:32:2;;;;;1401:389:7;9405:32:2;9443;;;;;;;;;;1401:389:7;;;;;;;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;-1:-1:-1;;959:43:0;;-1:-1:-1;;959:43:0;-1:-1:-1;1608:9:7::1;:45:::0;;-1:-1:-1;;;;;;1608:45:7::1;-1:-1:-1::0;;;;;1608:45:7;::::1;;::::0;;;1676:13:::1;1663:10;:26:::0;-1:-1:-1;;1608:9:7;-1:-1:-1;;;;1699:36:7::1;-1:-1:-1::0;;;;1699:36:7::1;;::::0;;-1:-1:-1;1745:3:7::1;:10:::0;;;;1765:7:::1;:18:::0;-1:-1:-1;712:3496:7;;-1:-1:-1;;712:3496:7;598:104:1;685:10;598:104;:::o;712:3496:7:-;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}